{
  "version": 3,
  "sources": ["../src/parser.ts", "../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\n\nfunction createParserContext(template) {\n  return {\n    line: 1, // \u884C\u53F7\n    column: 1, // \u5217\u53F7\n    offset: 0, // \u504F\u79FB\u91CF\n    source: template, // \u4F1A\u4E0D\u505C\u5730\u88AB\u622A\u53D6 \u76F4\u5230\u5B57\u7B26\u4E32\u4E3A\u7A7A\u7684\u65F6\u5019\n    originalSource: template,\n  };\n}\n\nfunction advancePositionWithMutation(context, source, endIndex) {\n  let linesCount = 0; // \u8BA1\u7B97\u7ECF\u8FC7\u591A\u5C11\u884C  \\n\n  let linePos = -1; // \u9047\u5230\u6362\u884C\u6807\u8BB0\u6362\u884C\u7684\u5F00\u59CB\u4F4D\u7F6E\n  // \u6839\u636E\u7ED3\u675F\u7D22\u5F15\u904D\u5386\u5185\u5BB9\uFF0C\u770B\u4E00\u4E0B\u7ECF\u5386\u4E86\u591A\u5C11\u4E2A\\n\u5B57\u7B26\n  for (let i = 0; i < endIndex; i++) {\n    if (source[i].charCodeAt(0) === 10) {\n      // \u5C31\u662F\u6362\u884C\n      linesCount++;\n      linePos = i;\n    }\n  }\n  context.line += linesCount;\n  context.offset += endIndex;\n  context.column =\n    linePos == -1 ? context.column + endIndex : endIndex - linePos;\n}\n\nfunction getCursor(context) {\n  let { line, column, offset } = context;\n  return { line, column, offset };\n}\n// \u5FAA\u73AF\u904D\u5386\u6A21\u677F\u7684\u7EC8\u6B62\u6761\u4EF6\uFF0C\u5982\u679C\u4E3A\u7A7A\u8BF4\u660E\u904D\u5386\u5B8C\u6BD5\nfunction isEnd(context) {\n  const source = context.source;\n\n  // \u5982\u679C\u9047\u5230 </div>\n\n  if (context.source.startsWith(\"</\")) {\n    // \u5982\u679C\u9047\u5230\u4E86 </div>\n    return true;\n  }\n\n  return !source;\n}\n// \u524D\u8FDB\u662F\u5220\u9664\u89E3\u6790\nfunction advanceBy(context, endIndex) {\n  let source = context.source;\n  advancePositionWithMutation(context, source, endIndex);\n  // \u5220\u9664\u89E3\u6790\u540E\u7684\u5185\u5BB9\n  context.source = source.slice(endIndex);\n}\nfunction parserTextData(context, endIndex) {\n  const content = context.source.slice(0, endIndex);\n  // \u622A\u53D6\u540E\u9700\u8981\u5C06context.source\u4E2D\u7684\u5185\u5BB9\u5220\u9664\u6389\uFF0C\u5220\u9664\u5DF2\u7ECF\u89E3\u6790\u7684\u5185\u5BB9\n  advanceBy(context, endIndex);\n  return content;\n}\n\nfunction getSelection(context, start, end?) {\n  end = getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset),\n  };\n}\nfunction parserText(context) {\n  // \u5982\u4F55\u8BA1\u7B97\u6587\u672C\u7684\u7ED3\u675F\u4F4D\u7F6E\n  // \u5047\u8BBE\u6CD5\u6C42\u672B\u5C3E\u7684\u7D22\u5F15\uFF0C\u5F97\u5230\u8DDD\u79BB\u81EA\u5DF1\u6700\u8FD1\u7684 < \u6216\u8005 {{ \u5C31\u7ED3\u675F\u561E\n  let endTokens = [\"<\", \"{{\"];\n  let endIndex = context.source.length; // \u9ED8\u8BA4\u672B\u5C3E\u662F\u662F\u6700\u540E\u4E00\u4F4D\n  let start = getCursor(context);\n  // 1<{}\n  for (let i = 0; i < endTokens.length; i++) {\n    // \u56E0\u4E3A\u5F00\u5934\u80AF\u5B9A\u662F\u6587\u672C\uFF0C\u6240\u4EE5\u7B2C\u4E00\u4E2A\u5B57\u7B26\u80AF\u5B9A\u4E0D\u662F < {{, \u4ECE\u4E0B\u4E00\u4E2A\u5F00\u59CB\u67E5\u627E\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index > -1 && index < endIndex) {\n      // \u6CA1\u5230\u7ED3\u5C3E\u5C31\u9047\u5230\u4E86 {{  <\n      endIndex = index; // \u7528\u6700\u8FD1\u7684\u4F5C\u4E3A \u6211\u4EEC\u7684\u7ED3\u5C3E\n    }\n  }\n  // context \u662F\u5F53\u524D\u6B63\u5728\u89E3\u6790\u7684\u5185\u5BB9\uFF0C\u6240\u4EE5\u4E0D\u7528\u8003\u8651startIndex\n  const content = parserTextData(context, endIndex);\n  return {\n    type: NodeTypes.TEXT,\n    content,\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parserInterpolation(context) {\n  const start = getCursor(context); // \u8868\u8FBE\u5F0F\u7684\u5F00\u59CB\u4FE1\u606F\n  const clonseIndex = context.source.indexOf(\"}}\", 2);\n\n  advanceBy(context, 2); // \u5220\u9664\u561E {{\n\n  const innerStart = getCursor(context);\n\n  const rawContentEndIndex = clonseIndex - 2; // \u83B7\u53D6\u539F\u59CB\u7528\u6237\u5927\u62EC\u53F7\u4E2D\u7684\u5185\u5BB9\u957F\u5EA6\n\n  // \u83B7\u53D6\u53BB\u7A7A\u683C\u662F\u4E4B\u524D\u7684\u5185\u5BB9\n  const preTrimContent = parserTextData(context, rawContentEndIndex);\n  const innerEnd = getCursor(context);\n  const content = preTrimContent.trim(); // \u53BB\u6389\u5185\u5BB9\u7684\u7A7A\u683C\n  advanceBy(context, 2); // \u53BB\u6389 }}\n  // {\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      isStatic: false,\n      content: content, // \u5185\u5BB9 **\n      loc: getSelection(context, innerStart, innerEnd), // \u6709\u70B9\u5C0Fbug\n    },\n    loc: getSelection(context, start),\n  };\n}\nfunction advnaceBySpaces(context) {\n  const match = /^[ \\t\\r\\n]+/.exec(context.source);\n  if (match) {\n    advanceBy(context, match[0].length); // \u5220\u9664\u6240\u6709\u7A7A\u683C\n  }\n}\n\nfunction parseAttributeValue(context) {\n  // \u5982\u679C\u6709\u5F15\u53F7 \u5220\u9664\u5F15\u53F7\uFF0C\u6CA1\u6709\u5F15\u53F7\u53EF\u4EE5\u76F4\u63A5\u7528\n  const quote = context.source[0];\n  const isQuoted = quote === \"'\" || quote === '\"'; // a='1' a=\"a\"\n  let content;\n  if (isQuoted) {\n    advanceBy(context, 1);\n    const endIndex = context.source.indexOf(quote); // \u7ED3\u5C3E\u7684\u7D22\u5F15   '   '\n    content = parserTextData(context, endIndex);\n    advanceBy(context, 1);\n\n    return content;\n  } else {\n  }\n}\n\nfunction parseAttribute(context) {\n  const start = getCursor(context); // <div a = b\n\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n\n  const name = match[0]; // \u83B7\u53D6\u5C5E\u6027\u540D\u5B57\n\n  advanceBy(context, name.length); // \u5220\u9664\u5C5E\u6027\u540D\n\n  let value;\n\n  // \u5148\u5339\u914D\u7A7A\u683C \u548C = \u5220\u9664\u6389 \u540E\u9762\u7684\u5C31\u662F\u6570\u5B66\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    //   b\n    advnaceBySpaces(context);\n    advanceBy(context, 1);\n    advnaceBySpaces(context);\n    value = parseAttributeValue(context); //  vue 2\u76F4\u63A5\u641E\u4E00\u4E2A\u5339\u914D\u5C5E\u6027\u7684\u6B63\u5219\u5C31\u53EF\u4EE5\u4E86\n  }\n\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: {\n      content: value,\n    },\n    loc: getSelection(context, start),\n  };\n}\nfunction parseAttributes(context) {\n  // \u89E3\u6790\u5C5E\u6027\n\n  const props = []; // <div   >\n\n  while (!context.source.startsWith(\">\")) {\n    // \u9047\u5230> \u5C31\u505C\u6B62\u5FAA\u73AF\n    const prop = parseAttribute(context);\n    props.push(prop);\n    advnaceBySpaces(context);\n  }\n\n  return props;\n}\nfunction parserTag(context) {\n  const start = getCursor(context);\n\n  // match 1) \u5339\u914D\u51FA\u6765\u7684\u662F\u5B8C\u6574\u7684\u5B57\u7B26\u4E32  <div></div>  match[0] = <div\n  // 2) \u7B2C\u4E00\u4E2A\u5206\u7EC4\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\n  const tag = match[1]; //'div'\n  advanceBy(context, match[0].length); // <div\n  advnaceBySpaces(context);\n  // \u5904\u7406\u5143\u7D20\u4E0A\u7684\u5C5E\u6027\n  let props = parseAttributes(context);\n  let isSelfClosing = context.source.startsWith(\"/>\"); // \u6211\u9700\u8981\u5220\u9664\u95ED\u5408\u6807\u7B7E\n  advanceBy(context, isSelfClosing ? 2 : 1);\n  return {\n    type: NodeTypes.ELEMENT,\n    isSelfClosing,\n    tag,\n    props,\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parserElement(context) {\n  let node = parserTag(context); // \u5148\u5904\u7406\u5F00\u59CB\u6807\u7B7E\n  (node as any).children = parseChilren(context); // \u9700\u8981\u5728\u5904\u7406\u6807\u7B7E\u540E\uFF0C\u5904\u7406\u7684\u5B50\u5143\u7D20\u90FD\u662F\u5979\u7684\u513F\u5B50\n  // <div><span></span><div>\n  if (context.source.startsWith(\"</\")) {\n    // </div>\n    parserTag(context); // \u5220\u9664\u6807\u7B7E\u7684\u95ED\u5408\u6807\u7B7E\uFF0C\u6CA1\u6709\u6536\u96C6\n  }\n  node.loc = getSelection(context, node.loc.start); // \u66F4\u65B0\u4E4B\u524D\u7684\u4FE1\u606F\n  return node;\n}\nfunction parseChilren(context) {\n  const nodes = [];\n  while (!isEnd(context)) {\n    const s = context.source; // \u83B7\u53D6\u5F53\u524D\u7684\u5185\u5BB9\n    let node; // \u5F53\u524D\u5904\u7406\u7684\u8282\u70B9\n    if (s[0] === \"<\") {\n      // \u6211\u53EF\u4EE5\u5BF9\u5143\u7D20\u8FDB\u884C\u5904\u7406\n      node = parserElement(context);\n    } else if (s.startsWith(\"{{\")) {\n      // \u6211\u4EEC\u53EF\u4EE5\u5BF9\u8868\u8FBE\u5F0F\u8FDB\u884C\u5904\u7406\n      node = parserInterpolation(context);\n    }\n    if (!node) {\n      // \u8FD9\u4E2A\u4E1C\u897F\u5C31\u662F\u6587\u672C\n      node = parserText(context);\n    }\n    // 1\n    nodes.push(node);\n  }\n\n  // \u5904\u7406\u540E\u7684\u8282\u70B9 \u5982\u679C\u662F\u6587\u672C \u591A\u4E2A\u7A7A\u683C \u5E94\u8BE5\u5408\u5E76\u6210\u4E00\u4E2A\n\n  // \u5982\u679C\u89E3\u6790\u540E\u7684\u7ED3\u679C\u662F\u7EAF\u7A7A\u683C \uFF0C\u5219\u76F4\u63A5\u79FB\u9664\u5C31\u53EF\u4EE5\u4E86\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (node.type === NodeTypes.TEXT) {\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n        nodes[i] = null; // \u5982\u679C\u662F\u7A7A\u8282\u70B9 \u5219\u76F4\u63A5\u53D8\u4E3Anull\n      } else {\n        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, \" \");\n      }\n    }\n  }\n  return nodes.filter((item) => {\n    return Boolean(item);\n  });\n}\nfunction createRoot(children, loc) {\n  return {\n    type: NodeTypes.ROOT,\n    children,\n    loc,\n  };\n}\nexport function parser(template) {\n  // \u89E3\u6790\u7684\u65F6\u5019 \u89E3\u6790\u4E00\u70B9\u5220\u9664\u4E00\u70B9,\u89E3\u6790\u7684\u7EC8\u6B62\u6761\u4EF6\u662F\u6A21\u677F\u7684\u5185\u5BB9\u6700\u7EC8\u4E3A\u7A7A\n  // \u72B6\u6001\u673A , \u6709\u9650\u72B6\u6001\u673A\u3002\u627E\u5230\u6BCF\u4E00\u4E2A\u5B57\u7B26\u4E32\u8FDB\u884C\u5904\u7406\n  const context = createParserContext(template);\n  const start = getCursor(context);\n  return createRoot(parseChilren(context), getSelection(context, start));\n}\n", "import { NodeTypes } from \"./ast\";\nimport { parser } from \"./parser\";\n\nfunction transformExpression(node, context) {\n  // {{NAME}}\n  // {{}}\n\n  if (node.type === NodeTypes.INTERPOLATION) {\n    console.log(\"\u8868\u8FBE\u5F0F\u5904\u7406\", node, context, \"----\");\n  }\n}\nfunction transformElement(node, context) {\n  if (node.type === NodeTypes.ELEMENT) {\n    console.log(\"\u8868\u8FBE\u5F0F\u5143\u7D20\", node, context, \"----\");\n  }\n}\n\nfunction transformText(node, context) {\n  if (node.type === NodeTypes.TEXT || node.type === NodeTypes.INTERPOLATION) {\n    console.log(\"\u6587\u672C\u8F6C\u6362\", node, context, \"----\");\n  }\n}\n\nfunction createTransformContext(root) {\n  // <div>1123 <span>></div><\n  const context = {\n    currentNode: root,\n    parent: null,\n    // vue3 \u65E9\u671F\u6CA1\u6709\u4F18\u5316\u7684\u65F6\u5019 \u53EF\u4EE5\u7528set\u6765\u53BB\u91CD   \u8BA1\u6570\u529F\u80FD  {createVnode:5}\n    helpers: new Map(), // \u7528\u4E8E\u5B58\u50A8\u7528\u5230\u7684\u65B9\u6CD5\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      const currentCount = count - 1;\n      if (!currentCount) {\n        context.helpers.delete(name);\n      } else {\n        context.helpers.set(name, currentCount);\n      }\n    },\n    nodeTransform: [\n      // \u7A0D\u540E\u6211\u4F1A\u904D\u5386\u6811\uFF0C\u62FF\u5230\u8282\u70B9\u8C03\u7528\u8FD9\u4E9B\u8F6C\u5316\u65B9\u6CD5\u8FDB\u884C\u8F6C\u6362\n      transformExpression,\n      transformElement,\n      transformText,\n    ],\n  };\n\n  return context;\n}\n// vue2 \u4E2D\u8F6C\u5316 \u53EA\u505A\u4E86\u6807\u8BB0\uFF0C vue3\u4E2DpatchFlags, block\u7684\u5904\u7406\nfunction traverseNode(ast, context) {\n  context.currentNode = ast;\n  const transforms = context.nodeTransform; // \u83B7\u53D6\u6240\u6709\u7684\u8F6C\u5316\u65B9\u6CD5\n  for (let i = 0; i < transforms.length; i++) {\n    transforms[i](ast, context);\n  }\n  switch (ast.type) {\n    case NodeTypes.ROOT:\n    case NodeTypes.ELEMENT:\n      for (let i = 0; i < ast.children.length; i++) {\n        context.parent = ast;\n        traverseNode(ast.children[i], context);\n      }\n  }\n}\n\nfunction transform(root) {\n  // \u53EF\u4EE5\u5C06\u4E00\u76F4\u4F7F\u7528\u7684\u4E1C\u897F \u901A\u8FC7\u4E0A\u4E0B\u6587\u5B58\u50A8\u3001 co\u7684\u6E90\u7801\uFF0C \u904D\u5386\u6811\n  const context = createTransformContext(root);\n\n  // dom\u6811\u904D\u5386 \u53EA\u80FD\u91C7\u7528\u6DF1\u5EA6\u904D\u5386\n\n  traverseNode(root, context);\n}\n\nexport function compile(template) {\n  const ast = parser(template); // 1\uFF09 \u5BF9\u6A21\u677F\u7684ast\u751F\u4EA7\n  transform(ast); // \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u8F6C\u5316  \u7ED9ast\u8282\u70B9\u662F\u589E\u52A0\u4E00\u4E9B\u989D\u5916\u7684\u4FE1\u606F  codegenNode, \u6536\u96C6\u9700\u8981\u5BFC\u5165\u7684\u65B9\u6CD5\n  return;\n}\n\n// createElementVnode\n// openBlock()\n\n// toDisplayString\n// Fragmet\n"],
  "mappings": "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",
  "names": []
}
